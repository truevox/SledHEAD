## JavaScript Files:

- **js/entities.js**: Manages collision detection, camera overlay rendering, and animal spawning/behavior mechanics, including drawing animal entities and handling animal fleeing behavior.
- **js/game.js**: Controls the core game loop and state transitions, including initializing gameplay, managing UI elements, and handling game start and loan payment logic.
- **js/input.js**: Handles global keyboard input tracking, including setting up event listeners for keydown and keyup events, and provides helper functions for checking key states.
- **js/mechanics.js**: Manages core gameplay mechanics such as loan repayment, jump and trick systems, collision detection, and movement handling for downhill and uphill phases.
- **js/player.js**: Defines the player object with all state variables, including position, velocity, camera angles, trick tracking, and jump state properties.
- **js/render.js**: Contains the rendering logic for drawing the player, terrain, floating texts, camera overlays, and animals. Manages visual effects like trick animations and the Re-Hit indicator.
- **js/upgrades.js**: Manages player and mountain upgrades, including upgrade costs, UI display logic, and purchase mechanics.
- **js/utils.js**: Provides utility functions and configurations, including game tweak parameters, audio functions, collision detection, mathematical helpers, and color interpolation utilities.
- **js/wildlifephotos.js**: Contains logic for the wildlife photography mini-game, including animal spawning, photo scoring, and managing animal behaviors like fleeing.
- **js/world.js**: Manages the generation of terrain and the awarding of money based on the player's distance traveled.

## Project Files:

- **index.html**: Main HTML file linking JavaScript and CSS files, defines the game UI structure.
- **styles.css**: Contains the game's styling, including layout and visual styles for UI elements.
- **1.0_README.md**: Likely an initial readme or changelog document for version 1.0.
- **README.md**: Primary documentation file for the project, describing setup and usage instructions.
- **ROADMAP.md**: Outlines planned features and future development directions.
- **LICENSE.md**: Contains the licensing terms for the project.
- **.gitignore**: Specifies which files and directories should be ignored by version control.
- **todo.txt**: Simple text file listing tasks and development priorities.
- **!READ_FIRST-FILE_SUMMARY.txt**: Possibly an initial overview or summary of the project.
